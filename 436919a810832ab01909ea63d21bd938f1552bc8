{
  "comments": [
    {
      "key": {
        "uuid": "5ddc7493_17bd8b00",
        "filename": "json_config.hpp",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-06-15T20:44:10Z",
      "side": 1,
      "message": "so the only difference between this and the existing constructor is this callback doesn\u0027t take the name of the config file?  I\u0027m probably missing something here.",
      "revId": "436919a810832ab01909ea63d21bd938f1552bc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "752a0a51_9032d7c5",
        "filename": "json_config.hpp",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2021-06-15T21:31:08Z",
      "side": 1,
      "message": "Correct, I\u0027ll be updating the other fan apps to use this constructor in place of passing the config file since they\u0027d be able to call getConfFile without performing any additional lookups now.\n\nEssentially for fan monitor and fan presence, there\u0027s no functional change in the end but this structure was necessary for fan control since it uses more than a single config file.",
      "parentUuid": "5ddc7493_17bd8b00",
      "revId": "436919a810832ab01909ea63d21bd938f1552bc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c26600c_52e90b6c",
        "filename": "json_config.hpp",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-06-15T21:57:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "752a0a51_9032d7c5",
      "revId": "436919a810832ab01909ea63d21bd938f1552bc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c81505ff_6390cbb1",
        "filename": "json_config.hpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-06-15T21:57:59Z",
      "side": 1,
      "message": "so in the case it isn\u0027t on d-bus yet it will call loadFunc in case loadFunc is happy with no config file.  But if it does want a config file, it\u0027s supposed to throw so the match doesn\u0027t get erased?    It might be a good idea to document that somewhere.",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 179,
        "endChar": 35
      },
      "revId": "436919a810832ab01909ea63d21bd938f1552bc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d8a4dd4_6597da95",
        "filename": "json_config.hpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2021-06-16T14:58:18Z",
      "side": 1,
      "message": "Done\n\nBasically, yes..its actually calling loadFunc in case loadFunc finds a config file from either the override or default locations where the compat interface is not used. When any required config file is not found at those locations nor the compat interface is available yet by calling loadFunc, loadFunc throws an exception (which would be the exception thrown in getConfFile() below).",
      "parentUuid": "c81505ff_6390cbb1",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 179,
        "endChar": 35
      },
      "revId": "436919a810832ab01909ea63d21bd938f1552bc8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}