{
  "comments": [
    {
      "key": {
        "uuid": "90092577_ba47be62",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2021-10-14T21:47:59Z",
      "side": 1,
      "message": "Why not just call setTarget then set _locked \u003d true?\n```\nvoid Fan::lockTarget(uint64_t target)\n{\n    setTarget(target)\n    _locked \u003d true;\n}\n```\n\nFor our use-case, this is fine...but we should consider how to handle more than one requests to lock the same fan like on a first-in-first-out request basis or another option?",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a0d7a1_73516c85",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1001082
      },
      "writtenOn": "2021-10-18T18:40:20Z",
      "side": 1,
      "message": "if you call setTarget(), Fan will forget what its original value was. I think I should stash the old value in a new member variable and recall it upon unlock. I dont think we need a stack to recall N values, just the old value before it was locked. That would also address the problem below, where lock would fail if it were locked to its current speed.",
      "parentUuid": "90092577_ba47be62",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82db9ab3_8b14c58b",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2021-10-18T19:17:50Z",
      "side": 1,
      "message": "There\u0027s no reason to stash the old target since the zone this fan is included in is allowed to be changing fan targets while this one is locked. Then the old target prior to locking would likely not be accurate when the fan is then unlocked.\n\nUpon unlocking, the fan object should query the zone its contained in to find what target it should resume dynamic control at.",
      "parentUuid": "06a0d7a1_73516c85",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3395c4b_8cf2f560",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1001082
      },
      "writtenOn": "2021-10-19T17:43:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82db9ab3_8b14c58b",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16ba5b6a_654cf429",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001082
      },
      "writtenOn": "2021-10-12T19:45:38Z",
      "side": 1,
      "message": "this bypasses the check on 92",
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e360305_88b2b641",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001082
      },
      "writtenOn": "2021-10-18T18:40:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16ba5b6a_654cf429",
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15dc3f1d_f3384f75",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1001082
      },
      "writtenOn": "2021-10-12T20:07:32Z",
      "side": 1,
      "message": "I just realized this will fail if the original _target (before locking) was 0. What I\u0027ll need is something odd-looking like _target\u003dtarget2+1;\n\nthoughts?",
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f134382c_3326ec74",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2021-10-14T21:47:59Z",
      "side": 1,
      "message": "After a fan has been unlocked, it needs to re-set its target back to the current target that\u0027s set on the zone its included in. Requires invention of setting a reference to the zone object on the fan object at the time the Fan object is added to the zone (in Manager::load())?\n\nBut then could do this:\n```\nvoid Fan::unlockTarget()\n{\n    _locked \u003d false;\n    setTarget(_zone.getTarget());\n}\n```",
      "parentUuid": "15dc3f1d_f3384f75",
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3f4748e_0223377d",
        "filename": "control/json/fan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1001082
      },
      "writtenOn": "2021-10-18T18:40:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f134382c_3326ec74",
      "revId": "07754d9c9f4fbf62cafdd24cd2b68ed6f1a15c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}